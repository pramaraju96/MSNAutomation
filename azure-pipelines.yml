# Starter pipeline
# Start with a minimal pipeline that you can customize to build and deploy your code.
# Add steps that build, run tests, deploy, and more:
# https://aka.ms/yaml

trigger:
 - none

pool:
  vmImage: 'ubuntu-latest'

stages:
    - stage: Build
      jobs:
          - job: 'runScript'
            steps:
            - task: Bash@3
              inputs:
                targetType: 'inline'
                script: |
                  # Write your commands here                  
                  echo 'Hello world.'

    - stage: Test
      jobs:
          - job: 'runScript'
            steps:
            - task: Bash@3
              inputs:
                targetType: 'inline'
                script: |
                  # Write your commands here                  
                  echo 'Hello world'

    - stage: Deploy
      jobs:
          - job: 'runScript'
            steps:
            - task: Bash@3
              inputs:
                targetType: 'inline'
                script: |
                  # Write your commands here                  
                  echo 'Hello world'

            - task: ServiceNow-DevOps-Agent-Package-Registration@1
              inputs:
                connectedServiceName: 'emprpolanki2-DevOpsADOProject2-ServiceNow DevOps Service Connection'
                packageName: 'msnautomation pipeline package'
                artifactsPayload: |
                  {
                      "artifacts": [
                      {
                          "name": "msnautomation_artifact.jar",
                          "repositoryName": "MSNAutomation",
                          "version": "1.$(build.buildId)",
                          "currentBuildInfo": "true"
                      }]
                  }

    - stage: Prod
      jobs:
          - job: 'runScript'
            steps:
            - task: Bash@3
              inputs:
                targetType: 'inline'
                script: |
                  # Write your commands here                  
                  echo 'Hello world'